restartable skippable fun RoundBorderText(
  stable modifier: Modifier? = @static Companion
  stable enabled: Boolean = @static true
  stable innerPadding: PaddingValues? = @static PaddingValues(10.dp)
  stable text: String
  stable style: TextStyle? = @dynamic LocalTextStyle.current
  stable borderOption: BorderOption? = @dynamic BorderOption(

)
  stable textOption: TextOption? = @dynamic TextOption(

)
  stable onClick: Function0<Unit>? = @static null
)
restartable skippable fun CircleBorderText(
  stable modifier: Modifier? = @static Companion
  stable enabled: Boolean = @static true
  stable size: Dp = @static 40.dp
  stable text: String
  stable style: TextStyle? = @dynamic LocalTextStyle.current
  stable borderOption: BorderOption? = @dynamic BorderOption(

)
  stable textOption: TextOption? = @dynamic TextOption(

)
  stable onClick: Function0<Unit>? = @static null
)
restartable skippable fun CircleBorderContent(
  stable modifier: Modifier? = @static Companion
  stable enabled: Boolean = @static true
  stable size: Dp = @static 40.dp
  stable borderOption: BorderOption? = @dynamic BorderOption(

)
  stable onClick: Function0<Unit>? = @static null
  stable content: Function2<Composer, Int, Unit>
)
restartable fun BottomBar(
  stable modifier: Modifier? = @static Companion
  stable colors: BottomBarColors? = @dynamic BottomBarColors(

)
  stable fontFamily: FontFamily? = @dynamic Companion.Default
  stable indicatorHeight: Dp = @static 1.dp
  stable barHeight: Dp = @static 60.dp
  stable titleTopPadding: Dp = @static 4.dp
  unstable items: List<BottomBarItem<T>>
  selectedItemState: T
  stable onItemSelected: Function1<@[ParameterName(name = 'item')] BottomBarItem<T>, Unit>
)
restartable skippable fun CustomAlertDialog(
  stable onDismissRequest: Function0<Unit>
  stable properties: DialogProperties? = @dynamic DialogProperties(

)
  stable content: Function2<Composer, Int, Unit>
)
restartable skippable fun FadingEdgeLazyColumn(
  stable modifier: Modifier? = @static Companion
  unstable gradients: Set<Gradient>? = @dynamic setOf(Top(

), Bottom(

))
  stable contentGap: Dp = @static 0.dp
  stable state: LazyListState? = @dynamic rememberLazyListState(0, 0, $composer, 0, 0b0011)
  stable contentPadding: PaddingValues? = @static PaddingValues(0.dp)
  stable reverseLayout: Boolean = @static false
  stable verticalArrangement: Vertical? = @dynamic if (!reverseLayout) {
  Arrangement  .  Top
} else {
  Arrangement  .  Bottom
}

  stable horizontalAlignment: Horizontal? = @static Companion.Start
  stable flingBehavior: FlingBehavior? = @dynamic ScrollableDefaults.flingBehavior($composer, 0b1000)
  stable userScrollEnabled: Boolean = @static true
  stable content: @[ExtensionFunctionType] Function1<LazyListScope, Unit>
)
restartable fun GradientView(
  stable modifier: Modifier? = @static Companion
  unstable colors: IntArray
  stable visible: Boolean = @static true
)
restartable skippable fun IconText(
  stable modifier: Modifier? = @static Companion
  stable iconRes: Int
  stable iconTint: Color = @static Companion.Unspecified
  stable iconSize: Dp = @static 24.dp
  stable text: String
  stable textStyle: TextStyle? = @dynamic LocalTextStyle.current
  stable textStartPadding: Dp = @static 4.dp
)
restartable skippable fun LabelCheckbox(
  stable modifier: Modifier? = @static Companion
  stable label: String
  stable labelStyle: TextStyle? = @dynamic LocalTextStyle.current
  stable checkboxStartPadding: Dp = @static 4.dp
  stable checkboxColors: CheckboxColors? = @dynamic CheckboxDefaults.colors(<unsafe-coerce>(0L), <unsafe-coerce>(0L), <unsafe-coerce>(0L), <unsafe-coerce>(0L), <unsafe-coerce>(0L), $composer, 0b01000000000000000000, 0b00011111)
  stable checkboxState: Boolean
  stable checkboxCheckedChange: Function1<@[ParameterName(name = 'checked')] Boolean, Unit>? = @static null
)
restartable fun RunnerbeCoil(
  stable modifier: Modifier? = @static Companion
  unstable src: Any
)
restartable skippable fun RunnerbeDialog(
  stable visible: Boolean
  stable onDismissRequest: Function0<Unit>
  stable properties: DialogProperties? = @dynamic DialogProperties(

)
  stable content: @[ExtensionFunctionType] Function3<ColumnScope, Composer, Int, Unit>
)
restartable skippable fun RunnerbeDialog(
  stable visible: Boolean
  stable onDismissRequest: Function0<Unit>
  stable properties: DialogProperties? = @dynamic DialogProperties(

)
  stable content: String
  stable positiveButton: @[ExtensionFunctionType] Function1<DialogButton, Unit>
  stable negativeButton: @[ExtensionFunctionType] Function1<DialogButton, Unit>? = @static null
)
restartable skippable fun RunnerbeDialog(
  stable visible: Boolean
  stable onDismissRequest: Function0<Unit>
  stable properties: DialogProperties? = @dynamic DialogProperties(

)
  stable content: Function2<Composer, Int, Unit>
  stable positiveButton: @[ExtensionFunctionType] Function1<DialogButton, Unit>
  stable negativeButton: @[ExtensionFunctionType] Function1<DialogButton, Unit>? = @static null
)
restartable skippable fun ToggleButton(
  stable modifier: Modifier? = @static Companion
  target: T
  selectState: T?
  stable targetStringBuilder: Function1<@[ParameterName(name = 'target')] T, String>
  stable colors: ToggleButtonColors? = @dynamic ToggleButtonColors(

)
  stable textStyle: ToggleButtonTextStyle? = @dynamic ToggleButtonTextStyle(

)
  stable onClick: Function0<Unit>
)
fun selectedTextStyle(
  itemId: T
): TextStyle
restartable fun ToggleTabBar(
  stable modifier: Modifier? = @static Companion
  stable colors: ToggleTopBarColors? = @dynamic ToggleTopBarColors(

)
  stable activateTextStyle: TextStyle? = @dynamic LocalTextStyle.current
  stable inactivateTextStyle: TextStyle? = @dynamic LocalTextStyle.current
  stable height: Dp = @static DefaultToggleTopBarHeight.dp
  stable radius: Dp = @static DefaultToggleTopBarRadius.dp
  unstable toggleTopBarItems: List<ToggleTopBarItem<T>>
  selectedItemState: T
  stable onTabClick: Function1<@[ParameterName(name = 'itemId')] T, Unit>
)
restartable skippable fun RunningItemTypeToggleBar(
  stable modifier: Modifier? = @static Companion
  stable selectedItemState: RunningItemType
  stable onTabClick: Function1<@[ParameterName(name = 'type')] RunningItemType, Unit>
)
restartable skippable fun TopBar(
  stable modifier: Modifier? = @static Companion
  stable startContent: Function2<Composer, Int, Unit>? = @static ComposableSingletons$TopBarKt.lambda-1
  stable centerContent: Function2<Composer, Int, Unit>? = @static ComposableSingletons$TopBarKt.lambda-2
  stable endContent: Function2<Composer, Int, Unit>? = @static ComposableSingletons$TopBarKt.lambda-3
)
fun colors(
  unused stable <this>: RunnerbeCheckBoxDefaults
): CheckboxColors
fun colors(
  unused stable <this>: RunnerbeSliderDefaults
): SliderColors
fun textStyle(
  unused stable <this>: RunnerbeSuperWheelPickerDefaults
): SuperWheelPickerTextStyle
fun presentationDrawableOf(
  stable name: String
): Drawable
fun presentationStringOf(
  stable name: String
): String
inline fun activityViewModel(
  stable key: String? = @static null
  unstable factory: Factory? = @static null
): VM
fun animatedColorState(
  target: T
  selectState: T
  stable defaultColor: Color
  stable selectedColor: Color
): Color
